from turtle import *#imports the turtle module with all of its functions
from freegames import line#imports the freegames module with all of its function

turns = {'red': 'yellow', 'yellow': 'red'}#turns is used to determine the turns of each player
state = {'player': 'yellow', 'rows': [4] * 14}#Second state value used to set inital placement of disks at different y values
state2 = {'player2': 'yellow', 'rows2': [3] * 14}#Second state value used to set inital placement of disks at different y values


def grid(): #defines the placement of a visual grid as reference for the players
    """Draw Connect Four grid."""
    bgcolor('light blue')#intializes colour of grid

    for x in range(-350, 400, 50):#gives the area the lines can be (lengh from left, lengh from right, space between)
                                  #x and values changed to support larger 14*14 board
        line(x, -300, x, 300)#gives the lengh of each of the lines(lengh going up, lengh going down)
                             #x and y values changed to support larger 14*14 board
    line(-350, 0, 350, 0)#new center line that seperates two sides of the board
        
    for x in range(-325, 350, 50):#gives the area the disk can be (offsets disk position, number of disk lines, width between disks)
                                  #x and values changed to support larger 14*14 board
        for y in range(-275, 300, 50):#(removes disks from bottom, removes from top, width of disks)
                                      #x and values changed to support larger 14*14 board
            up()#stops turtle from inserting another shape in the place clicked on
            goto(x, y)#it makes the turtle draw a disk on the specified coordinates
            dot(40, 'white')#draws a dot with a with the specified dimensions and colour

    update()#updates the value associated with the input of the click on the spaces


def tap(x, y):#Draws a red or yellow disk in the tapped rows
    """Draw red or yellow disk in tapped row."""
    
    if ( x< -350 or 350 < x ) == True:#defines the boundries of the game and where a player is able to place a disk
       None

        
    elif (y > 0) == True:#function that checks if disk is placed above the line of the grid
        player = state['player']# 
        rows = state['rows']#
        
        row = int((x + 200) // 50)#calculates the x value for each disk placed
        count = rows[row]#Initializes the row value to calculate for y and other calculations

        x = ((x + 200) // 50) * 50 - 175 # (((x) + Where dot is placed relative to clicked row) // width btwn rows) * (width2) - (where dot2) + (slight offset (combined with "where dot2"))
        y = count * 50 - 175 #Uses count from above to do same as x
        up()#stops turtle from inserting another shape in the place clicked on
        goto(x, y)#it makes the turtle draw a disk on the specified coordinates
        dot(40, player)#draws a dot with a with the specified colour and the player
        update()#updates the value associated with the input of the click on the spaces
        rows[row] = count + 1#Allows turtle tp draw two disks on top of each of it by 1 y value higher
        state['player'] = turns[player]#Changes the player turn based off of the given player's turn. Erg. Yellow changed to red, Red changed to Yellow
        state2['player2'] = state['player']#
        
    elif (y < 0) == True:#function that checks if disk is placed below the line of the grid
        player2 = state2['player2']#Changes the player turn based off of the given player's turn. Erg. Yellow changed to red, Red changed to Yellow
        rows2 = state2['rows2']#Applies the player turn change to both halves of the game board
        
        row2 = int((x + 200) // 50)#calculates the x value for each disk placed
        count2 = rows2[row2]#Initializes the row value to calculate for y and other calculations

        x = ((x + 200) // 50) * 50 - 175 # (((x) + Where dot is placed relative to clicked row) // width btwn rows) * (width2) - (where dot2) + (slight offset)
        y = count2 * 50 - 175 #Uses count from above to do same as x
        up()#stops turtle from inserting another shape in the place clicked on
        goto(x, y)#it makes the turtle draw a disk on the specified coordinates
        dot(40, player2)#draws a dot with a with the specified colour and for the player
        update()#updates the value associated with the input of the click on the spaces
        rows2[row2] = count2 - 1 #Allows turtle tp draw two disks on top of each of it by 1 y value lower
        state2['player2'] = turns[player2]#Changes the player turn based off of the given player's turn. Erg. Yellow changed to red, Red changed to Yellow
        state['player'] = state2['player2']#Applies the player turn change to both halves of the game board

setup(420, 420, 370, 0)
hideturtle()
tracer(False)#
grid()
onscreenclick(tap)
done()
